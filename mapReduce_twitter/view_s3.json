{"views":{"coffee_filter":{"map":"function (doc) {\n\n  coffee_a = [\n    'coffee',\n    'espresso',\n    'latte',\n    'cappuccino',\n    'mocha',\n    'americano',\n    'cold brew',\n    'macchiato',\n    'affogato',\n    'doppio',\n    'ristretto',\n    'lungo',\n    'flat white',\n    'long black',\n    'short black',\n    'nespresso'\n  ]\n  coffee_1 = [...new Set(coffee_a.concat(coffee_a.map(x => x.replace(' ', ''))))]\n\n  keywords = coffee_1\n\n  state = doc.place_name['state']\n  city_town = doc.place_name['city']\n\n  function correctFormat (input) {\n    if (Array.isArray(input)) {\n      if (input.length === 0) {\n        return \"Null\"\n      } else {\n        return input.join(\",\").toLowerCase()\n      }\n    }\n    if (input === null) {\n      return \"Null\"\n    }\n    return input.toLowerCase()\n  }\n\n  tags = correctFormat(doc.tags)\n  tokens = correctFormat(doc.tokens).replace(\"|\", \" \")\n  domain_name = correctFormat(doc.domain_name)\n  description = correctFormat(doc.description)\n  matching_rule_tag = correctFormat(doc.matching_rule_tag)\n  hashtags = correctFormat(doc.hashtags)\n\n  if (state == 'victoria' && city_town != null) {\n    for (const keyword of keywords) {\n      if (tags.includes(keyword) ||\n        tokens.includes(keyword) ||\n        domain_name.includes(keyword) ||\n        description.includes(keyword) ||\n        matching_rule_tag.includes(keyword) ||\n        hashtags.includes(keyword)) {\n\n        emit(city_town, 1)\n\n        break\n      }\n    }\n  }\n\n}","reduce":"_sum"}}}